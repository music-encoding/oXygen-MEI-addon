<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="oXygen-MEI-addon" default="dist">
  
  <!-- import default properties from file -->
  <property file="build.properties"/>
  <property file="local.build.properties"/>
  
  <target name="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${dist.dir}"/>
  </target>
  
  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>
  
  <target name="reset">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <target name="clean.assets">
    <delete dir="assets/"/>
  </target>
  
  <target name="get-local-git-revision">
    <description>Get the current git revision</description>
    <exec executable="git" outputproperty="local.revision">
      <arg value="describe"/>
      <arg value="--tags"/>
      <arg value="--always"/>
      <arg value="HEAD"/>
    </exec>
    <echo>Local revision: ${local.revision}</echo>
    <property name="revision" value="${local.revision}"/>
  </target>
  
  <target name="load-license">
    <loadfile srcfile="LICENSES/LGPL-3.0.txt" encoding="utf-8" property="license"/>
    <echo>${license}</echo>
  </target>
  
  <target name="verovio-copy-src">
    <copy file="src/verovio/bindings/java/example-mei/main.java" todir="submodules/verovio/bindings/java/example-mei/" overwrite="yes"/>
  </target>
  
  <target name="verovio-clean">
    <exec dir="submodules/verovio/bindings/java/" executable="mvn">
      <arg value="clean"/>
    </exec>
    <delete file="submodules/verovio/bindings/java/example-mei/main.class"/>
  </target>
  
  <target name="verovio-prepare" depends="verovio-copy-src, verovio-clean">
    <exec dir="submodules/verovio/bindings/java/" executable="mvn">
      <arg value="package"/>
    </exec>
  </target>
  
  <target name="verovio-build" depends="verovio-prepare">
    <exec dir="submodules/verovio/bindings/java/" executable="mvn">
      <arg value="package"/>
    </exec>
  </target>
  
  <target name="verovio-compile" depends="verovio-build">
    <javac srcdir="submodules/verovio/bindings/java/example-mei/"
      destdir="submodules/verovio/bindings/java/example-mei/"
      classpath="file:///Users/bwb/GitHub/oXygen-MEI-addon/submodules/verovio/bindings/java/target/VerovioToolkit-2.0.0.jar"
      verbose="true"
      includeantruntime="true">
    </javac>
  </target>
  
  <target name="dist" depends="clean,init,get-local-git-revision,load-license">
    <antcall target="frameworks.init"/>
    <property name="zip" value="${name.short}_${revision}.zip"/>
    <property name="dest" value="${build.dir}/${name.short}"/>
    <copy todir="${dest}" flatten="false" outputencoding="utf-8">
      <fileset dir="LICENSES" />
      <fileset dir="src/" >
        <exclude name="framework/"/>
        <exclude name="plugin/"/>
        <exclude name="verovio/"/>
      </fileset>
      <fileset dir="src/framework/"/>
      <fileset dir="src/plugin/"/>
      <filterset>
        <filter token="NAME" value="${name}"/>
        <filter token="ID" value="${name.short}"/>
        <filter token="DESCRIPTION" value="${description}"/>
        <filter token="VERSION" value="${version}"/>
        <filter token="LICENSE" value="${license}"/>
        <filter token="ZIP" value="${zip}"/>
      </filterset>
    </copy>
    <!-- verovio -->
    <copy todir="${dest}/verovio/bindings/java/" flatten="false">
      <fileset dir="submodules/verovio/bindings/java/"/>
    </copy>
    <copy todir="${dest}/verovio/bindings/java/example-mei" flatten="false">
      <fileset dir="submodules/verovio/bindings/java/target/classes/"/>
    </copy>
    <copy todir="${dest}/verovio/data/" flatten="false">
      <fileset dir="submodules/verovio/data/"/>
    </copy>
    <copy todir="${dest}/verovio/src/" flatten="false">
      <fileset dir="submodules/verovio/src/"/>
    </copy>
    <!-- mec-proceedings -->
    <copy todir="${dest}/templates/mec-proceedings/">
      <fileset dir="submodules/mec-proceedings/examples/"/>
      <fileset dir="submodules/mec-proceedings/templates/"/>
    </copy>
    <copy todir="${dest}/music-encoding/mec-proceedings/schemata/">
      <fileset dir="submodules/mec-proceedings/schemata/"/>
    </copy>
    <copy todir="${dest}/stylesheets/mec-proceedings/">
      <fileset dir="submodules/mec-proceedings/stylesheets/"/>
    </copy>
    <!-- /mec-proceedings -->
    <!-- encoding-tools -->
    <copy todir="${dest}/encoding-tools/" flatten="false"> 
      <fileset dir="submodules/encoding-tools/"/>
    </copy>
    <!-- /encoding-tools -->
    <copy todir="${dest}" flatten="false" outputencoding="utf-8">
      <fileset dir="assets"/>
    </copy>
    <zip basedir="${build.dir}" excludes="oXygen-MEI-addon.xml" destfile="${dist.dir}/${revision}/${zip}"/>
    <copy file="${dest}/oXygen-MEI-addon.xml" todir="${dist.dir}/${revision}/"/>
  </target>
  
  <target name="v3.0.0">
    <!-- create assets directories -->
    <mkdir dir="temp/v3.0.0/" />
    <mkdir dir="assets/music-encoding/v3.0.0/schemata/"/>
    <mkdir dir="assets/music-encoding/v3.0.0/guidelines/"/>
    <!-- get schemata to temp -->
    <get verbose="on" src="https://github.com/music-encoding/music-encoding/releases/download/v3.0.0/MEI.3.0.0.Schemata.only.zip" dest="temp/v3.0.0/"/>
    <!-- unzip schemata -->
    <unzip src="temp/v3.0.0/MEI.3.0.0.Schemata.only.zip" dest="assets/music-encoding/v3.0.0/schemata/"/>
    <!-- download guidelines to assets directory -->
    <get verbose="on" src="https://github.com/music-encoding/music-encoding/releases/download/v3.0.0/MEI_Guidelines_v3.0.0.pdf" dest="assets/music-encoding/v3.0.0/guidelines/"/>
    <!-- cleanup temp -->
    <delete dir="temp/v3.0.0/"/>
  </target>

  <target name="v2.1.1">
    <!-- create assets directories -->
    <mkdir dir="temp/v2.1.1/" />
    <mkdir dir="assets/music-encoding/v2.1.1/schemata/"/>
    <mkdir dir="assets/music-encoding/v2.1.1/guidelines/"/>
    <!-- get source to temp -->
    <get verbose="on" src="https://github.com/music-encoding/music-encoding/archive/MEI2013_v2.1.1.zip" dest="temp/v2.1.1/"/>
    <!-- unzip schemata -->
    <unzip src="temp/v2.1.1/MEI2013_v2.1.1.zip" dest="assets/music-encoding/v2.1.1/schemata/">
      <patternset>
        <include name="*/schemata/*"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
    <!-- unzip guidelines -->
    <unzip src="temp/v2.1.1/MEI2013_v2.1.1.zip" dest="assets/music-encoding/v2.1.1/guidelines/">
      <patternset>
        <include name="*/guidelines/*"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
    <!-- cleanup temp -->
    <delete dir="temp/v2.1.1/"/>
  </target>
  
  <target name="v2.1.0">
    <!-- create assets directories -->
    <mkdir dir="temp/v2.1.0/" />
    <mkdir dir="assets/music-encoding/v2.1.0/schemata/"/>
    <mkdir dir="assets/music-encoding/v2.1.0/guidelines/"/>
    <!-- get source to temp -->
    <get verbose="on" src="https://github.com/music-encoding/music-encoding/archive/MEI2013_v2.1.0.zip" dest="temp/v2.1.0/"/>
    <!-- unzip schemata -->
    <unzip src="temp/v2.1.0/MEI2013_v2.1.0.zip" dest="assets/music-encoding/v2.1.0/schemata/">
      <patternset>
        <include name="*/schemata/*"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
    <!-- unzip guidelines -->
    <unzip src="temp/v2.1.0/MEI2013_v2.1.0.zip" dest="assets/music-encoding/v2.1.0/guidelines/">
      <patternset>
        <include name="*/guidelines/*"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
    <!-- cleanup temp -->
    <delete dir="temp/v2.1.0/"/>
  </target>
  
  <target name="v2.0.0">
    <!-- create assets directories -->
    <mkdir dir="temp/v2.0.0/" />
    <mkdir dir="assets/music-encoding/v2.0.0/schemata/"/>
    <mkdir dir="assets/music-encoding/v2.0.0/guidelines/"/>
    <!-- get source to temp -->
    <get verbose="on" src="https://github.com/music-encoding/music-encoding/archive/MEI2012_v2.0.0.zip" dest="temp/v2.0.0/"/>
    <!-- unzip schemata -->
    <unzip src="temp/v2.0.0/MEI2012_v2.0.0.zip" dest="assets/music-encoding/v2.0.0/schemata/">
      <patternset>
        <include name="*/schemata/*"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
    <!-- unzip guidelines -->
    <unzip src="temp/v2.0.0/MEI2012_v2.0.0.zip" dest="assets/music-encoding/v2.0.0/guidelines/">
      <patternset>
        <include name="*/guidelines/*"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
    <!-- cleanup temp -->
    <delete dir="temp/v2.0.0/"/>
  </target>
  
  <target name="2011-05">
    <!-- create assets directories -->
    <mkdir dir="temp/2011-05/" />
    <mkdir dir="assets/music-encoding/2011-05/schemata/"/>
    <mkdir dir="assets/music-encoding/2011-05/guidelines/"/>
    <!-- get source to temp -->
    <get verbose="on" src="https://github.com/music-encoding/music-encoding/archive/MEI_release_2011-05.zip" dest="temp/2011-05/"/>
    <!-- unzip schemata -->
    <unzip src="temp/2011-05/MEI_release_2011-05.zip" dest="assets/music-encoding/2011-05/schemata/">
      <patternset>
        <include name="*/schemata/*.rng"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
    <!-- unzip guidelines -->
    <!-- no guidelines exist in this release -->
    <!--<unzip src="temp/2011-05/MEI_release_2011-05.zip" dest="assets/music-encoding/2011-05/guidelines/">
      <patternset>
        <include name="*/guidelines/*"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>-->
    <!-- cleanup temp -->
    <delete dir="temp/2011-05/"/>
  </target>
  
  <target name="2010-05">
    <!-- create assets directories -->
    <mkdir dir="temp/2010-05/" />
    <mkdir dir="assets/music-encoding/2010-05/schemata/"/>
    <mkdir dir="assets/music-encoding/2010-05/guidelines/"/>
    <!-- get source to temp -->
    <get verbose="on" src="https://github.com/music-encoding/music-encoding/archive/MEI_release_2010-05.zip" dest="temp/2010-05/"/>
    <!-- unzip schemata -->
    <unzip src="temp/2010-05/MEI_release_2010-05.zip" dest="assets/music-encoding/2010-05/schemata/">
      <patternset>
        <include name="**/rng/*"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
    <!-- unzip guidelines -->
    <!-- no guidelines exist in this release -->
    <unzip src="temp/2010-05/MEI_release_2010-05.zip" dest="assets/music-encoding/2010-05/guidelines/">
      <patternset>
        <include name="**/documentation/*"/>
      </patternset>
      <mapper type="flatten"/>
    </unzip>
    <!-- cleanup temp -->
    <delete dir="temp/2010-05/"/>
  </target>

  <target name="frameworks.init">
    <antcall target="2010-05"/>
    <antcall target="2011-05"/>
    <antcall target="v2.0.0"/>
    <antcall target="v2.1.0"/>
    <antcall target="v2.1.1"/>
    <antcall target="v3.0.0"/>
  </target>
  
</project>